#=============================================================================
# ERROR CODES and MESSAGE TEMPLATES
#=============================================================================
# Errors are registered and the messages are configured using the following 
# error codes. Message templates can have extra arguments that are replaced 
# with actual values at the time the corresponding error code is resolved.
#
# error.code.default=a common message to show for all 'error.code' cases.
# error.code=the message template (with parameters) for a particular error case: element={0}, value={1}, etc.
#  
# When a concrete validation rule checks a BioPAX element E 
# and registers the error case using its error(errors, "error.code", args) method, 
# args[0] replaces the parameter {0}, args[1] - {1}, etc. And, the element's RDF ID
# will be also shown in the final error message (so you do not need to include
# the object E itself or its RDFId into the args when calling the error(..) method) 

illegal.property.value.default=Data Property Might Have Wrong Value.
illegal.property.value=property: {0}, value: {1}.

min.cardinality.violated.default=Minimal Cardinality Violation
min.cardinality.violated=property: {0} requires at least {1} value(s).

max.cardinality.violated.default=Maximal Cardinality Violation
max.cardinality.violated=property: {0} requires {1} value(s) at most. 

cardinality.violated.default=Cardinality Violation
cardinality.violated=property: {0} requires {1} value(s). 

range.violated.default=BioPAX Property Range Violation (Illegal Value Type).
range.violated=property: {0}, value: {1}; {2} is not {3}

symmetric.violated.default=Property Does Not Have This Entity as Its Value for the Same Property!
symmetric.violated=property: {0}, value: {1} 

inverse.functional.violated.default=Another Object Has the Same Value for the 'Inverse Functional' Property!
inverse.functional.violated=property: {0}, value: {1}, is also property of: {2}

syntax.error.default=XML/RDF/OWL Syntax Problems that Have Happened during the BioPAX Data Import.
syntax.error={0}

unknown.class.default=Unknown BioPAX Class (not defined in the BioPAX specification).
unknown.class=could not add element: {0}

unknown.property.default=Unknown BioPAX Property (not defined in the BioPAX specification).
unknown.property=could not set property: {0}

not.allowed.element.default=Direct Instances of This Class Are Not Allowed.
not.allowed.element=class: {0}

not.specific.element.default=Did You Mean to Use This and Not a More Specific Type?
not.specific.element=class: {0}

invalid.id.format.default=Xref ID Value Does Not Match the Pattern. If It Looks Like '12345_2', Then '2' Is Probably Version Number That Should Go to the 'idVersion' Property.
invalid.id.format=db: {0}, id: {1}, pattern: {2}

unknown.db.default=Unknown Database Identifier. Please Use One from MIRIAM (Highly Recommended) or PSI-MI "database citation".
unknown.db=db: {0}

db.name.spelling.default=The 'db' Property Value Is Valid, but Uses a Variant Name Instead of the More Commonly Used and Recommended One.
db.name.spelling=db: {0}, recommended name: {1}.

not.taxon.db.default=Not a Taxonomy Database Name.
not.taxon.db=db: {0}

cloned.utility.class.default=Several BioPAX Utility Class Objects (e.g., ProteinReference, Provenance) Happen to Be Equivalent; Their Key BioPAX Properties Are either Empty (e.g., no Xrefs) or Have the Same Values, and this Often Leads to Semantic Errors that Are Difficult to Find.
cloned.utility.class=equivalent to: {0} (utility class: {1})

shared.unification.xref.default=Unification Xref Belongs to Several Elements!
shared.unification.xref=is unification xref of elements {0}

too.long.name.default='displayName' Value Exceeds the Recommended Maximum.
too.long.name={0}, length={1} exceeds {2}

no.xrefs.default=EntityReference Does Not Have Any Xrefs.

no.unification.xref.default=EntityReference Does Not Have a UnificationXref.

component.not.found.default=This PathwayStep Contains a StepProcess That Is Not a Component of the Same Pathway.
component.not.found=this pathway: {1}, step process: {0}

misplaced.step.conversion.default=Only One Conversion Interaction Can Be Ordered at a Time (Use stepConversion Property to Do So).

same.state.participant.default=Left Participant in the Conversion Interaction Is Equivalent to the Right Participant (Same State, Location). Did You Mean These Are Controllers?
same.state.participant=left: {0}, right: {1}

same.state.entity.default=Two Physical Entities of This Reference Type Are Equivalent. They Must Be in Different States.
same.state.entity=entity: {0} is equivalent to: {1}

empty.participants.intersection.default=This Step Has No Participants That Are Used in the Previous Step.
empty.participants.intersection= previous step: {0}

multiple.location.default=Participants Span Multiple Cellular Locations.
multiple.location=participants: {0}, {1}

participant.location.changed.default=Same Kind Physical Entity Participant Has Different Cellular Location on the Left and Right Sides! This is Allowed Only for a TransportWithBiochemicalReaction. 
participant.location.changed=left: {0}, right: {1}

transport.location.same.default=Transport Participant Cannot Have the Same Location on the Left and Right Sides! 
transport.location.same=left: {0}, right: {1}

component.different.location.default=Complex, Components Has Different Cellular Locations (not taking into account the cell parts hierarchy)
component.different.location=complex location: {0}, component(s): {1}

component.no.location.default=Component(s) Are to Have The Same Cellular Location As Complex.
component.no.location=complex location: {0}, component(s): {1}

complex.not.present.default=ComplexAssembly Interaction Does Not Have Any Complexes on the Left or Right side.

# see also: the 'dbAllow' set configured in the applicationContext.xml
not.allowed.xref.default=Unification Xref Uses (Known) Database Name That Is Not in the List of Recommended for the Parent Element Class.
not.allowed.xref=element: {1}, xref.db: {0} (xrefs of: {2} are limited to: {3})

# see also: the 'dbDeny' set configured in the applicationContext.xml
denied.xref.default=Unification Xref Refers to the (Known) Database That, However, Is Not Applicable to the Parent Element Type.
denied.xref=element: {1}, xref.db: {0} (xrefs of: {2} cannot use: {3})

illegal.cv.term.default=Wrong Controlled Vocabulary Term or ID Instead of the Name.
illegal.cv.term=Illegal term: {0}. Controlled vocabulary id: {1}. Rules: {2}. 

cyclic.inclusion.default=Pathway Contains Itself.
cyclic.inclusion=property: {0}

dangling.element.default=This Element Is Not Used by Any Other Element (- Might Be Correct for Root Pathways or Interactions).

dangling.value.default=Object Property Value Is Dangling, i.e., Not Found in the Model (Also, This Can Be the Result of Using Wrong Class Name or Having a Syntax Error Earlier in the Input).
dangling.value=domain: {0}, property: {1}

direction.conflict.default=Conflict Between Two Related "direction" Properties.
direction.conflict={0} , whereas in {1} : {2}

multi.organism.pathway.default=Components Have Different Values for the 'organism' Property. 
multi.organism.pathway=pathway has: {0}, components have: {1}

complex.incomplete.default=Complex Has No Component, or the One Without Properly Defined Stoichiometry.
complex.incomplete={0}

no.short.name.default=No Short Names Specified ('displayName' Is Recommended.)

invalid.rdf.id.default=Error in the ID (must be URI).
invalid.rdf.id=problem: {0}

duplicate.names.default=Either the 'standardName' or 'displayName' Is Set, and/or the Same Name Is Again Repeated in the 'name' Property.
duplicate.names=name: {0}

illegal.conversion.default=Physical Entity Is Either Missing or Converted into Another Kind on the Other Side of the Conversion Interaction.
illegal.conversion=conversion: {0}, side (entity not found): {1}

diff.kind.same.name.default=Different Kind Physical Entities (i.e., Same Type but Not Equivalent Entity Reference) Have the Same Name. Listed Here Are NOT All Duplicates.
diff.kind.same.name=physical entities: {0}

empty.biopax.model.default=Model does not have any objects! (This might be due to errors in the OWL/XML header, e.g., namespace declarations...) 
empty.biopax.model=level: {0}

null.entity.reference.default=A Protein, SmallMolecule, i.e., a SimplePhysicalEntity (that in BioPAX describes a pool of interacting "molecules") has neither 'entityReference' nor 'memberPhysicalEntity' values set.
null.entity.reference= entityReference (range: {0}) is null, and memberPhysicalEntity is empty

duplicate.id.ignoringcase.default=Several BioPAX elements have "almost the same ID", i.e., when they're compared ignoring case.
duplicate.id.ignoringcase=ID equals ignoring case to: {0}
