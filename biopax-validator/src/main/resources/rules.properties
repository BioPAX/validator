#=============================================================================
# VALIDATION RULE DESCRIPTIONS
#=============================================================================
# Provided that a rule name is the corresponding class name, rule's description can be set as follows:
##

org.biopax.validator.rules.XrefRule=Validates xref (db/id).

org.biopax.validator.rules.XrefSynonymDbRule=Checks for misspelled or deprecated db names.

org.biopax.validator.rules.DisplayNameRule=Checks whether a short name is present (where applicable); warns if a displayName is too long

org.biopax.validator.rules.EmptyModelRule=Checks If a BioPAX Model Is Empty (i.e., for some reason, it has no BioPAX elements)

org.biopax.validator.rules.BiochemPathwayStepProcessOnlyControlCRRule=BiochemicalPathwayStep.stepProcess must be a subclass of Control

org.biopax.validator.rules.BiochemReactParticipantsLocationRule=BiochemicalReaction (base) participants should not change to another compartment on the other side of the reaction; otherwise, use TransportWithBiochemicalReaction. (Complexes are matched by name; other physical entities are identified using entity references)

org.biopax.validator.rules.SameLeftRightRule=Checks if any of the participants on one side of this conversion remained unchanged on the other side( as tested by isEquivalent method). This is a violation of chemical semantics. These participants should be listed as controllers instead

org.biopax.validator.rules.InteractionTypeCvRule=Interaction.interactionType is InteractionTypeVocabulary valid term: MI "interaction type" children (names).

org.biopax.validator.rules.InteractionParticipantsLocationRule=Warns if participants of a generic interaction span multiple cellular compartments. For Transport, however, it checks separately on the left and right sides, and it does not check for TemplateReaction at all.

org.biopax.validator.rules.BioSourceCellTypeCvRule=BioSource.cellType - CellVocabulary, CL ontology, "cell" (CL:0000000) children terms (names)

org.biopax.validator.rules.BioSourceTaxonXrefRule=Checks that BioSource.taxonXref actually refers to a taxonomy database

org.biopax.validator.rules.BioSourceTissueCvRule=BioSource.tissue -> TissueVocabulary, BTO ontology, children of "brenda source tissue ontology" (BTO:0000000) 

org.biopax.validator.rules.ComplexAssemblyHasComplexParticipantRule=Checks if either a ComplexAssembly has got a complex at least on one side, or any two or more interaction participants are bound to each other on either left or right side. 

org.biopax.validator.rules.NotAdvisedInstancesRule=warns about using of too general BioPAX classes

org.biopax.validator.rules.NotAllowedInstancesRule=several top-level BioPAX classes are not allowed to use directly

org.biopax.validator.rules.ExperimentalFormDescriptionCvRule=experimentalForm.experimentalFormDescription: ExperimentalFormVocabulary term: MI:0002, MI:0495 or MI:0346 children (names)

org.biopax.validator.rules.SharedUnificationXrefRule=Different elements have the same UnificationXrefs! This violates UnificationXref semantics, unless the objects are, in fact, equivalent (despite having different URIs)

org.biopax.validator.rules.NextStepShareParticipantsRule=PathwayStep, if listed in the nextStep property of another PathwayStep, must have not empty intersection of participants of their stepProcess-es

org.biopax.validator.rules.XrefRelationshipTypeRule=RelationshipXref.relationshipType (RelationshipTypeVocabulary): MI "cross-reference type" children terms (names)

org.biopax.validator.rules.PathwayStepProcessesArePathwayComponents=PathwayStep.stepProcess (or stepConversion) must be also listed in the pathway component property

org.biopax.validator.rules.SequenceRegionCvRule=SequenceRegionVocabulary: SO "region" children terms (names)

org.biopax.validator.rules.PhenotypeCvRule=GeneticInteraction.phenotype, PhenotypeVocabulary: PATO "organismal quality" all children, or "viability"

org.biopax.validator.rules.EntityReferenceSamePhysicalEntitiesRule=Checks physical entities that reference the same EntityReference are different (in different states)

org.biopax.validator.rules.EvidenceCodeCvRule=evidence.evidenceCode has valid EvidenceCodeVocabulary term: MI "interaction detection method", "participant identification method", or "feature detection method" children (names)

org.biopax.validator.rules.DataPropertyIllegalValueRule=Warns about empty and potentially illegal data property values, e.g., '-1', 'NULL', 'NIL', etc.

org.biopax.validator.rules.DanglingElementRule=Checks if an object is actually referenced from other objects (except for pathways)

org.biopax.validator.rules.ClonedUtilityClassRule=Warns about duplicate (semantically equivalent) utility classes (whereas, e.g., a single BioSource instance can be linked from several entities) 

org.biopax.validator.rules.ComplexTwoOrMoreParticipantsRule=Checks complexes consist of several components, or one's stoichiometry > 1

org.biopax.validator.rules.ControlledVocabularyTermCRRule=Checks controlled vocabulary has at least one 'term' ("best practice")

org.biopax.validator.rules.ComplexComponentsSameLocationRule=Checks components' cellular location is not empty if one is specified for the complex

org.biopax.validator.rules.SameNameDiffKindPhysEntitiesRule=Checks different physical entities having names in common (may flag about a more serious error)

org.biopax.validator.rules.XrefDbCRRule=Checks 'db' property of Xref has string value ("best practice")

org.biopax.validator.rules.XrefIdCRRule=Checks 'id' property of Xref has string value ("best practice")

org.biopax.validator.rules.BindingFeatureBindsToCRRule=Checks BindingFeature is 'functional' property (OWL constraint)

org.biopax.validator.rules.ModificationFeatureLocationCRRule=Warns if ModificationFeature.featureLocation is not set

org.biopax.validator.rules.ProteinModificationFeatureCvRule=Checks Protein.modificationFeature.modoficationType has valid SequenceModificationVocabulary term: MI:0118 with all its children and MI:0120 and all children (use names)

org.biopax.validator.rules.NucleicAcidModificationFeatureCvRule=Checks Dna/Rna modificationFeature.modoficationType has valid SequenceModificationVocabulary term: SO:1000132 with all its children and SO:0001059 and all children (use names)

org.biopax.validator.rules.BindingFeatureExtraRules=This 'Post Model' Rule Checks BindingFeature.bindsTo 'inverse functional' constraint

org.biopax.validator.rules.BindingFeatureSymmetricRule=Checks BindingFeature.bindsTo 'symmetric' constraint (bfA.bindsTo=bfB <=> bfB.bindsTo=bfA)

org.biopax.validator.rules.BiochemicalPathwayStepAndCatalysisDirectionRule=If a BiochemicalPathwayStep.stepDirection is not empty, then direction of Catalysis instances are either blank or equivalent; and the corresponding Conversion.conversionDirection in the stepConversion, if any, is specified as "REVERSIBLE"

org.biopax.validator.rules.BiopaxElementIdRule=BioPAX Element ID (including the namespace) Must Be a Valid URI;

org.biopax.validator.rules.BioSourceCellTypeCRRule=Checks BioSource.cellType cardinality/range constraint: none or one CellVocabulary

org.biopax.validator.rules.BioSourceTaxonXrefCRRule=Checks BioSource.taxonXref cardinality/range: none or one UnificationXref

org.biopax.validator.rules.BioSourceTissueCRRule=Checks BioSource.tissue cardinality/range constraint: none or one TissueVocabulary

org.biopax.validator.rules.CatalysisDirectionCRRule=Checks Catalysis.catalysisDirection cardinality/range constraint: none or one CatalysisDirectionType

org.biopax.validator.rules.ComplexComponentsMultipleLocationRule=Warns when complex components span multiple cellular compartments

org.biopax.validator.rules.ConversionDirectionCRRule=Checks Conversion.conversionDirection cardinality/range: 0 or 1 ConversionDirectionType value

org.biopax.validator.rules.EntityReferenceOrganismCRRule=Checks EntityReference.organism (except for SmallMoleculeReference) cardinality/range: no or one BioSource value

org.biopax.validator.rules.EntityReferenceTypeCRRule=Checks EntityReference properties cardinality/range: none or one EntityReferenceTypeVocabulary value

org.biopax.validator.rules.EvidencePropertiesUsageRule=Checks Evidence properties cardinality: at least one of: 'evidenceCode' (EvidenceCodeVocabulary), 'confidence' (Score), or 'experimantalForm' (ExperimentalForm) must have value

org.biopax.validator.rules.ExperimentalFormDescriptionCRRule=Checks ExperimentalForm.experimentalFormDescription has at least one ExperimentalFormVocabulary value

org.biopax.validator.rules.GeneOrganismCRRule=Checks Gene.organism has either none or one value (BioSource)

org.biopax.validator.rules.GeneticInteractionParticipantCRRule=Checks GeneticInteraction.participant property contains at least two Genes

org.biopax.validator.rules.GeneticInteractionPhenotypeCRRule=Checks GeneticInteraction.phenotype has exactly one PhenotypeVocabulary value

org.biopax.validator.rules.GeneticInteractionTypeCRRule=Checks GeneticInteraction.interactionType either has none or one InteractionVocabulary

org.biopax.validator.rules.ModificationTypeCRRule=Checks ModificationFeature.modificationType contains exactly one SequenceModificationVocabulary

org.biopax.validator.rules.PathwayOrganismCRRule=Checks Pathway.organism cardinality/range: none or one BioSource value

org.biopax.validator.rules.PhysicalEntityCellularLocationCRRule=Checks PhysicalEntity.cellularLocation cardinality/range: either none or one CellularLocationVocabulary

org.biopax.validator.rules.RelationshipTypeCvRule=Checks (RelationshipXref.relationshipType) RelationshipTypeVocabulary terms: all "MI:0353" children names

org.biopax.validator.rules.RnaRegionReferenceAbsoluteRegionCRRule=Checks RnaRegionReference properties cardinality/range: either one or none SequenceLocation value

org.biopax.validator.rules.ScoreSourceCRRule=Checks Score.scoreSource cardinality/range: either one or none Provenance value

org.biopax.validator.rules.SequenceIntervalBeginCRRule=Checks SequenceInterval.sequenceIntervalBegin cardinality/range: either one or none SequenceSite

org.biopax.validator.rules.SequenceIntervalEndCRRule=Checks SequenceInterval.sequenceIntervalEnd cardinality/range: either one or none SequenceSite

org.biopax.validator.rules.SimplePhysicalEntityConversionRule=Checks that biopolymers on one side of the conversion are those (modified and/or relocated) from the other side, and not new ones; two exceptions are: ComplexAssembly and Degradation.

org.biopax.validator.rules.SmrStructureCRRule=Checks SmallMoleculeReference.structure cardinality/range: either one or none ChemicalStructure

org.biopax.validator.rules.StoichiometricCoefficientCRRule=Checks Stoichiometry.stoichiometricCoefficient range/cardinality: must have exactly one float value

org.biopax.validator.rules.StoichiometryPhysicalEntityCRRule=Checks Stoichiometry.physicalEntity cardinality/range: must have exactly one PhysicalEntity value

org.biopax.validator.rules.UnificationXrefLimitedRule=UnificationXref external database applicability rule

org.biopax.validator.rules.ControlTypeRule=If set, the controlType must be "ACTIVATION" for Catalysis and either "ACTIVATION" or "INHIBITION" for TemplateReactionRegulation

org.biopax.validator.rules.CatalysisControllerCRRule=Warns if a catalysis has multiple controllers (PhysicalEntity or Pathway). Normally a controller for a catalysis interaction is a single PhysicalEntity, and if you have two, they are often part of a complex.

org.biopax.validator.rules.ModulationControllerCRRule=Checks Modulation.controller has at most one PhysicalEntity (or Pathway)

org.biopax.validator.rules.TemplateReactionRegulationControllerCRRule=Checks TemplateReactionRegulation.controller range is PhysicalEntity (multiple)

org.biopax.validator.rules.DegradationConversionDirectionRule=Checks Degradation.conversionDirection value is "LEFT_TO_RIGHT" or empty

org.biopax.validator.rules.EntityReferenceXrefRule=Checks a non-generic EntityReference has a (unification) xref

org.biopax.validator.rules.GenericEntityReferenceXrefRule=Checks a generic EntityReference has a (unification) xref

org.biopax.validator.rules.DnaRegionReferenceAbsoluteRegionCRRule=DnaRegionReference.absoluteRegion property: cardinality=0,1 (functional), range = SequenceLocation

org.biopax.validator.rules.SimplePhysicalEntityFeaturesRule=checks if a Physical Entity Feature is also a feature of its Entity Reference.

org.biopax.validator.rules.PhysicalEntityAmbiguousFeatureRule=Checks if a PhysicalEntity that is both a participant of a Conversion and a component of a Complex has proper binding features

org.biopax.validator.rules.ConversionToComplexAssemblyRule=Checks whether a Conversion should be cast as a ComplexAssembly


# entityReference cardinality/range rules

## these are normally "warnings"
org.biopax.validator.rules.ProteinEntityReferenceCRRule=Checks Protein.entityReference value is a ProteinReference or nothing

org.biopax.validator.rules.SmallMoleculeEntityReferenceCRRule=Checks SmallMolecule.entityReference value is a SmallMoleculeReference or nothing

org.biopax.validator.rules.DnaEntityReferenceCRRule=Checks Dna.entityReference value is a DnaReference or nothing

org.biopax.validator.rules.DnaRegionEntityReferenceCRRule=Checks DnaRegion.entityReference value is a DnaRegionReference or nothing

org.biopax.validator.rules.RnaEntityReferenceCRRule=Checks Rna.entityReference value is a RnaReference or nothing

org.biopax.validator.rules.RnaRegionEntityReferenceCRRule=Checks RnaRegion.entityReference value is a RnaRegionReference or nothing


## these are normally "errors" (note: Reactome files sometimes do not have entityReference but do have memberPE with ERs there set)
org.biopax.validator.rules.ProteinEntityReferenceRule=Checks either Protein.entityReference or Protein.memberPhysicalEntity is not empty.

org.biopax.validator.rules.SmallMoleculeEntityReferenceRule=Checks either SmallMolecule.entityReference or SmallMolecule.memberPhysicalEntity is not empty.

org.biopax.validator.rules.RnaEntityReferenceRule=Checks either Rna.entityReference or Rna.memberPhysicalEntity is not empty.

org.biopax.validator.rules.RnaRegionEntityReferenceRule=Checks either RnaRegion.entityReference or RnaRegion.memberPhysicalEntity is not empty.

org.biopax.validator.rules.DnaEntityReferenceRule=Checks either Dna.entityReference or Dna.memberPhysicalEntity is not empty.

org.biopax.validator.rules.DnaRegionEntityReferenceRule=Checks either DnaRegion.entityReference or DnaRegion.memberPhysicalEntity is not empty.

org.biopax.validator.rules.DuplicateIdCaseInsensitiveRule=Checks for "duplicate" IDs - when compared ignoring case.

org.biopax.validator.rules.GenericProteinReferenceOrganismRule=Warns if organism property is not set for a generic ProteinReference.

org.biopax.validator.rules.ProteinReferenceOrganismRule=Checks (non-generic) ProteinReference has organism property set (BioSource)

org.biopax.validator.rules.ControlledVocabularyXrefCRRule=Checks controlled vocabulary has one unification xref

org.biopax.validator.rules.AcyclicComplexRule=Checks if a Complex Contains Itself (e.g., in its component's component)

org.biopax.validator.rules.BiopaxElementIdLengthRule=Checks and informs whether a URI (ID) string is longer than commonly used ones

org.biopax.validator.rules.EntityFeatureInverseFunctionalRule=Checks if an EntityFeature is owned by multiple EntityReferences

